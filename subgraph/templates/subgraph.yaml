specVersion: 0.0.2
description: YooLoot
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: FirstYooLoot
    network: {{chainName}}
    source:
      address: '{{contracts.YooLoot.address}}'
      abi: YooLootContract
      startBlock: {{contracts.YooLoot.receipt.blockNumber}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - YooLootGame
        - LootSubmitted
        - Player
      abis:
        - name: YooLootContract
          file: ./abis/YooLoot.json
      eventHandlers:
        # event NewGame(address indexed loot, bool winnerGetLoot, uint8 commit3HPeriod, uint8 reveal3HPeriod, uint8 winner3HPeriod);
        - event: NewGame(indexed address,bool,uint8,uint8,uint8)
          handler: handleNewGame
        # event Cloned(address newYooLoot, bool authorizedAsXPSource);
        - event: Cloned(address,bool)
          handler: handleCloned
      file: ./src/first.ts
templates:
  - name: YooLoot
    kind: ethereum/contract
    network: {{chainName}}
    source:
      abi: YooLootContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.1
      language: wasm/assemblyscript
      file: ./src/mapping.ts
      entities:
        - YooLootGame
        - LootSubmitted
        - Player
      abis:
        - name: YooLootContract
          file: ./abis/YooLoot.json
      eventHandlers:
        # event NewGame(address indexed loot, bool winnerGetLoot, uint8 commit3HPeriod, uint8 reveal3HPeriod, uint8 winner3HPeriod);
        - event: NewGame(indexed address,bool,uint8,uint8,uint8)
          handler: handleNewGame
        # event LootDeckSubmitted(address indexed player, uint256 indexed lootId, bytes32 deckHash);
        - event: LootDeckSubmitted(indexed address,indexed uint256,bytes32)
          handler: handleLootDeckSubmitted
        # event LootDeckCanceled(address indexed player, uint256 indexed lootId);
        - event: LootDeckCanceled(indexed address,indexed uint256)
          handler: handleDeckCanceled
        # event LootDeckRevealed(uint256 indexed lootId, uint8[8] deck);
        - event: LootDeckRevealed(indexed uint256,uint8[8])
          handler: handleLootDeckRevealed
        # event WinnerWithdrawal(address indexed winner, address indexed playerPastOwner, uint256 indexed lootId);
        - event: WinnerWithdrawal(indexed address,indexed address,indexed uint256)
          handler: handleWinnerWithdrawal
        # event LootWithdrawn(address indexed player, uint256 indexed lootId, uint256 xpGaimed);
        - event: LootWithdrawn(indexed address,indexed uint256,uint256)
          handler: handleLootWithdrawn
