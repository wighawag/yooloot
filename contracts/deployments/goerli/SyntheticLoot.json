{
  "address": "0xcd9df382a7ccfe5abe2936d8066f0581e57f165d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "chestComponents",
      "outputs": [
        {
          "internalType": "uint256[5]",
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "footComponents",
      "outputs": [
        {
          "internalType": "uint256[5]",
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "getChest",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "getFoot",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "getHand",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "getHead",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "getNeck",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "getRing",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "getWaist",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "getWeapon",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "handComponents",
      "outputs": [
        {
          "internalType": "uint256[5]",
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "headComponents",
      "outputs": [
        {
          "internalType": "uint256[5]",
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "neckComponents",
      "outputs": [
        {
          "internalType": "uint256[5]",
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "ringComponents",
      "outputs": [
        {
          "internalType": "uint256[5]",
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "waistComponents",
      "outputs": [
        {
          "internalType": "uint256[5]",
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "weaponComponents",
      "outputs": [
        {
          "internalType": "uint256[5]",
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x620545f27186b1351d24285eb5922acc88154a04bea48a3abaced41663091172",
  "receipt": {
    "to": null,
    "from": "0x61c461ecc993aadeb7e4b47e96d1b8cc37314b20",
    "contractAddress": "0xcd9df382a7ccfe5abe2936d8066f0581e57f165d",
    "transactionIndex": "0x6",
    "gasUsed": "0x71bb41",
    "logsBloom": "0x
    "blockHash": "0x19890e5553cf899013ca76c3e86f0c2a04b096cefa9305ea5491b5362955961c",
    "transactionHash": "0xf445e98177317dda6ea0a66eec243c302aa759683aa69b2d2eb6d6c62489b785",
    "logs": [],
    "blockNumber": "0x539e9b",
    "cumulativeGasUsed": "0x780185",
    "status": "0x1"
  },
  "args": [],
  "solcInputHash": "b6a140946d52fdd9b1590afdec078a1f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"chestComponents\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"footComponents\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"getChest\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"getFoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"getHand\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"getHead\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"getNeck\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"getRing\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"getWaist\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"getWeapon\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"handComponents\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"headComponents\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"neckComponents\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"ringComponents\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"waistComponents\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"weaponComponents\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/external/solc_0.8.4/SyntheticLoot.sol\":\"SyntheticLoot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000000},\"remappings\":[]},\"sources\":{\"src/external/solc_0.8.4/SyntheticLoot.sol\":{\"content\":\"/**\\n *Submitted for verification at Etherscan.io on 2021-09-01\\n*/\\n\\n// SPDX-License-Identifier: Unlicense\\n\\n/*\\n\\n    Synthetic Loot\\n\\n    This contract creates a \\\"virtual NFT\\\" of Loot based\\n    on a given wallet address.\\n\\n    Because the wallet address is used as the deterministic\\n    seed, there can only be one Loot bag per wallet.\\n\\n    Because it's not a real NFT, there is no\\n    minting, transferability, etc.\\n\\n    Creators building on top of Loot can choose to recognize\\n    Synthetic Loot as a way to allow a wider range of\\n    adventurers to participate in the ecosystem, while\\n    still being able to differentiate between\\n    \\\"original\\\" Loot and Synthetic Loot.\\n\\n    Anyone with an Ethereum wallet has Synthetic Loot.\\n\\n    -----\\n\\n    Also optionally returns data in LootComponents format:\\n\\n    Call weaponComponents(), chestComponents(), etc. to get\\n    an array of attributes that correspond to the item.\\n\\n    The return format is:\\n\\n    uint256[5] =>\\n        [0] = Item ID\\n        [1] = Suffix ID (0 for none)\\n        [2] = Name Prefix ID (0 for none)\\n        [3] = Name Suffix ID (0 for none)\\n        [4] = Augmentation (0 = false, 1 = true)\\n\\n    See the item and attribute tables below for corresponding IDs.\\n\\n    The original LootComponents contract is at address:\\n    0x3eb43b1545a360d1D065CB7539339363dFD445F3\\n\\n*/\\n\\npragma solidity ^0.8.4;\\n\\ncontract SyntheticLoot {\\n\\n    string[] private weapons = [\\n        \\\"Warhammer\\\",            // 0\\n        \\\"Quarterstaff\\\",         // 1\\n        \\\"Maul\\\",                 // 2\\n        \\\"Mace\\\",                 // 3\\n        \\\"Club\\\",                 // 4\\n        \\\"Katana\\\",               // 5\\n        \\\"Falchion\\\",             // 6\\n        \\\"Scimitar\\\",             // 7\\n        \\\"Long Sword\\\",           // 8\\n        \\\"Short Sword\\\",          // 9\\n        \\\"Ghost Wand\\\",           // 10\\n        \\\"Grave Wand\\\",           // 11\\n        \\\"Bone Wand\\\",            // 12\\n        \\\"Wand\\\",                 // 13\\n        \\\"Grimoire\\\",             // 14\\n        \\\"Chronicle\\\",            // 15\\n        \\\"Tome\\\",                 // 16\\n        \\\"Book\\\"                  // 17\\n    ];\\n\\n    string[] private chestArmor = [\\n        \\\"Divine Robe\\\",          // 0\\n        \\\"Silk Robe\\\",            // 1\\n        \\\"Linen Robe\\\",           // 2\\n        \\\"Robe\\\",                 // 3\\n        \\\"Shirt\\\",                // 4\\n        \\\"Demon Husk\\\",           // 5\\n        \\\"Dragonskin Armor\\\",     // 6\\n        \\\"Studded Leather Armor\\\",// 7\\n        \\\"Hard Leather Armor\\\",   // 8\\n        \\\"Leather Armor\\\",        // 9\\n        \\\"Holy Chestplate\\\",      // 10\\n        \\\"Ornate Chestplate\\\",    // 11\\n        \\\"Plate Mail\\\",           // 12\\n        \\\"Chain Mail\\\",           // 13\\n        \\\"Ring Mail\\\"             // 14\\n    ];\\n\\n    string[] private headArmor = [\\n        \\\"Ancient Helm\\\",         // 0\\n        \\\"Ornate Helm\\\",          // 1\\n        \\\"Great Helm\\\",           // 2\\n        \\\"Full Helm\\\",            // 3\\n        \\\"Helm\\\",                 // 4\\n        \\\"Demon Crown\\\",          // 5\\n        \\\"Dragon's Crown\\\",       // 6\\n        \\\"War Cap\\\",              // 7\\n        \\\"Leather Cap\\\",          // 8\\n        \\\"Cap\\\",                  // 9\\n        \\\"Crown\\\",                // 10\\n        \\\"Divine Hood\\\",          // 11\\n        \\\"Silk Hood\\\",            // 12\\n        \\\"Linen Hood\\\",           // 13\\n        \\\"Hood\\\"                  // 14\\n    ];\\n\\n    string[] private waistArmor = [\\n        \\\"Ornate Belt\\\",          // 0\\n        \\\"War Belt\\\",             // 1\\n        \\\"Plated Belt\\\",          // 2\\n        \\\"Mesh Belt\\\",            // 3\\n        \\\"Heavy Belt\\\",           // 4\\n        \\\"Demonhide Belt\\\",       // 5\\n        \\\"Dragonskin Belt\\\",      // 6\\n        \\\"Studded Leather Belt\\\", // 7\\n        \\\"Hard Leather Belt\\\",    // 8\\n        \\\"Leather Belt\\\",         // 9\\n        \\\"Brightsilk Sash\\\",      // 10\\n        \\\"Silk Sash\\\",            // 11\\n        \\\"Wool Sash\\\",            // 12\\n        \\\"Linen Sash\\\",           // 13\\n        \\\"Sash\\\"                  // 14\\n    ];\\n\\n    string[] private footArmor = [\\n        \\\"Holy Greaves\\\",         // 0\\n        \\\"Ornate Greaves\\\",       // 1\\n        \\\"Greaves\\\",              // 2\\n        \\\"Chain Boots\\\",          // 3\\n        \\\"Heavy Boots\\\",          // 4\\n        \\\"Demonhide Boots\\\",      // 5\\n        \\\"Dragonskin Boots\\\",     // 6\\n        \\\"Studded Leather Boots\\\",// 7\\n        \\\"Hard Leather Boots\\\",   // 8\\n        \\\"Leather Boots\\\",        // 9\\n        \\\"Divine Slippers\\\",      // 10\\n        \\\"Silk Slippers\\\",        // 11\\n        \\\"Wool Shoes\\\",           // 12\\n        \\\"Linen Shoes\\\",          // 13\\n        \\\"Shoes\\\"                 // 14\\n    ];\\n\\n    string[] private handArmor = [\\n        \\\"Holy Gauntlets\\\",       // 0\\n        \\\"Ornate Gauntlets\\\",     // 1\\n        \\\"Gauntlets\\\",            // 2\\n        \\\"Chain Gloves\\\",         // 3\\n        \\\"Heavy Gloves\\\",         // 4\\n        \\\"Demon's Hands\\\",        // 5\\n        \\\"Dragonskin Gloves\\\",    // 6\\n        \\\"Studded Leather Gloves\\\",// 7\\n        \\\"Hard Leather Gloves\\\",  // 8\\n        \\\"Leather Gloves\\\",       // 9\\n        \\\"Divine Gloves\\\",        // 10\\n        \\\"Silk Gloves\\\",          // 11\\n        \\\"Wool Gloves\\\",          // 12\\n        \\\"Linen Gloves\\\",         // 13\\n        \\\"Gloves\\\"                // 14\\n    ];\\n\\n    string[] private necklaces = [\\n        \\\"Necklace\\\",             // 0\\n        \\\"Amulet\\\",               // 1\\n        \\\"Pendant\\\"               // 2\\n    ];\\n\\n    string[] private rings = [\\n        \\\"Gold Ring\\\",            // 0\\n        \\\"Silver Ring\\\",          // 1\\n        \\\"Bronze Ring\\\",          // 2\\n        \\\"Platinum Ring\\\",        // 3\\n        \\\"Titanium Ring\\\"         // 4\\n    ];\\n\\n    string[] private suffixes = [\\n        // <no suffix>          // 0\\n        \\\"of Power\\\",             // 1\\n        \\\"of Giants\\\",            // 2\\n        \\\"of Titans\\\",            // 3\\n        \\\"of Skill\\\",             // 4\\n        \\\"of Perfection\\\",        // 5\\n        \\\"of Brilliance\\\",        // 6\\n        \\\"of Enlightenment\\\",     // 7\\n        \\\"of Protection\\\",        // 8\\n        \\\"of Anger\\\",             // 9\\n        \\\"of Rage\\\",              // 10\\n        \\\"of Fury\\\",              // 11\\n        \\\"of Vitriol\\\",           // 12\\n        \\\"of the Fox\\\",           // 13\\n        \\\"of Detection\\\",         // 14\\n        \\\"of Reflection\\\",        // 15\\n        \\\"of the Twins\\\"          // 16\\n    ];\\n\\n    string[] private namePrefixes = [\\n        // <no name>            // 0\\n        \\\"Agony\\\",                // 1\\n        \\\"Apocalypse\\\",           // 2\\n        \\\"Armageddon\\\",           // 3\\n        \\\"Beast\\\",                // 4\\n        \\\"Behemoth\\\",             // 5\\n        \\\"Blight\\\",               // 6\\n        \\\"Blood\\\",                // 7\\n        \\\"Bramble\\\",              // 8\\n        \\\"Brimstone\\\",            // 9\\n        \\\"Brood\\\",                // 10\\n        \\\"Carrion\\\",              // 11\\n        \\\"Cataclysm\\\",            // 12\\n        \\\"Chimeric\\\",             // 13\\n        \\\"Corpse\\\",               // 14\\n        \\\"Corruption\\\",           // 15\\n        \\\"Damnation\\\",            // 16\\n        \\\"Death\\\",                // 17\\n        \\\"Demon\\\",                // 18\\n        \\\"Dire\\\",                 // 19\\n        \\\"Dragon\\\",               // 20\\n        \\\"Dread\\\",                // 21\\n        \\\"Doom\\\",                 // 22\\n        \\\"Dusk\\\",                 // 23\\n        \\\"Eagle\\\",                // 24\\n        \\\"Empyrean\\\",             // 25\\n        \\\"Fate\\\",                 // 26\\n        \\\"Foe\\\",                  // 27\\n        \\\"Gale\\\",                 // 28\\n        \\\"Ghoul\\\",                // 29\\n        \\\"Gloom\\\",                // 30\\n        \\\"Glyph\\\",                // 31\\n        \\\"Golem\\\",                // 32\\n        \\\"Grim\\\",                 // 33\\n        \\\"Hate\\\",                 // 34\\n        \\\"Havoc\\\",                // 35\\n        \\\"Honour\\\",               // 36\\n        \\\"Horror\\\",               // 37\\n        \\\"Hypnotic\\\",             // 38\\n        \\\"Kraken\\\",               // 39\\n        \\\"Loath\\\",                // 40\\n        \\\"Maelstrom\\\",            // 41\\n        \\\"Mind\\\",                 // 42\\n        \\\"Miracle\\\",              // 43\\n        \\\"Morbid\\\",               // 44\\n        \\\"Oblivion\\\",             // 45\\n        \\\"Onslaught\\\",            // 46\\n        \\\"Pain\\\",                 // 47\\n        \\\"Pandemonium\\\",          // 48\\n        \\\"Phoenix\\\",              // 49\\n        \\\"Plague\\\",               // 50\\n        \\\"Rage\\\",                 // 51\\n        \\\"Rapture\\\",              // 52\\n        \\\"Rune\\\",                 // 53\\n        \\\"Skull\\\",                // 54\\n        \\\"Sol\\\",                  // 55\\n        \\\"Soul\\\",                 // 56\\n        \\\"Sorrow\\\",               // 57\\n        \\\"Spirit\\\",               // 58\\n        \\\"Storm\\\",                // 59\\n        \\\"Tempest\\\",              // 60\\n        \\\"Torment\\\",              // 61\\n        \\\"Vengeance\\\",            // 62\\n        \\\"Victory\\\",              // 63\\n        \\\"Viper\\\",                // 64\\n        \\\"Vortex\\\",               // 65\\n        \\\"Woe\\\",                  // 66\\n        \\\"Wrath\\\",                // 67\\n        \\\"Light's\\\",              // 68\\n        \\\"Shimmering\\\"            // 69\\n    ];\\n\\n    string[] private nameSuffixes = [\\n        // <no name>            // 0\\n        \\\"Bane\\\",                 // 1\\n        \\\"Root\\\",                 // 2\\n        \\\"Bite\\\",                 // 3\\n        \\\"Song\\\",                 // 4\\n        \\\"Roar\\\",                 // 5\\n        \\\"Grasp\\\",                // 6\\n        \\\"Instrument\\\",           // 7\\n        \\\"Glow\\\",                 // 8\\n        \\\"Bender\\\",               // 9\\n        \\\"Shadow\\\",               // 10\\n        \\\"Whisper\\\",              // 11\\n        \\\"Shout\\\",                // 12\\n        \\\"Growl\\\",                // 13\\n        \\\"Tear\\\",                 // 14\\n        \\\"Peak\\\",                 // 15\\n        \\\"Form\\\",                 // 16\\n        \\\"Sun\\\",                  // 17\\n        \\\"Moon\\\"                  // 18\\n    ];\\n\\n    function random(string memory input) internal pure returns (uint256) {\\n        return uint256(keccak256(abi.encodePacked(input)));\\n    }\\n\\n    function weaponComponents(address walletAddress) public view returns (uint256[5] memory) {\\n        return pluck(walletAddress, \\\"WEAPON\\\", weapons);\\n    }\\n\\n    function chestComponents(address walletAddress) public view returns (uint256[5] memory) {\\n        return pluck(walletAddress, \\\"CHEST\\\", chestArmor);\\n    }\\n\\n    function headComponents(address walletAddress) public view returns (uint256[5] memory) {\\n        return pluck(walletAddress, \\\"HEAD\\\", headArmor);\\n    }\\n\\n    function waistComponents(address walletAddress) public view returns (uint256[5] memory) {\\n        return pluck(walletAddress, \\\"WAIST\\\", waistArmor);\\n    }\\n\\n    function footComponents(address walletAddress) public view returns (uint256[5] memory) {\\n        return pluck(walletAddress, \\\"FOOT\\\", footArmor);\\n    }\\n\\n    function handComponents(address walletAddress) public view returns (uint256[5] memory) {\\n        return pluck(walletAddress, \\\"HAND\\\", handArmor);\\n    }\\n\\n    function neckComponents(address walletAddress) public view returns (uint256[5] memory) {\\n        return pluck(walletAddress, \\\"NECK\\\", necklaces);\\n    }\\n\\n    function ringComponents(address walletAddress) public view returns (uint256[5] memory) {\\n        return pluck(walletAddress, \\\"RING\\\", rings);\\n    }\\n\\n    function getWeapon(address walletAddress) public view returns (string memory) {\\n        return pluckName(walletAddress, \\\"WEAPON\\\", weapons);\\n    }\\n\\n    function getChest(address walletAddress) public view returns (string memory) {\\n        return pluckName(walletAddress, \\\"CHEST\\\", chestArmor);\\n    }\\n\\n    function getHead(address walletAddress) public view returns (string memory) {\\n        return pluckName(walletAddress, \\\"HEAD\\\", headArmor);\\n    }\\n\\n    function getWaist(address walletAddress) public view returns (string memory) {\\n        return pluckName(walletAddress, \\\"WAIST\\\", waistArmor);\\n    }\\n\\n    function getFoot(address walletAddress) public view returns (string memory) {\\n        return pluckName(walletAddress, \\\"FOOT\\\", footArmor);\\n    }\\n\\n    function getHand(address walletAddress) public view returns (string memory) {\\n        return pluckName(walletAddress, \\\"HAND\\\", handArmor);\\n    }\\n\\n    function getNeck(address walletAddress) public view returns (string memory) {\\n        return pluckName(walletAddress, \\\"NECK\\\", necklaces);\\n    }\\n\\n    function getRing(address walletAddress) public view returns (string memory) {\\n        return pluckName(walletAddress, \\\"RING\\\", rings);\\n    }\\n\\n    function pluckName(address walletAddress, string memory keyPrefix, string[] memory sourceArray) internal view returns (string memory) {\\n        uint256 rand = random(string(abi.encodePacked(keyPrefix, abi.encodePacked(walletAddress))));\\n        string memory output = sourceArray[rand % sourceArray.length];\\n        uint256 greatness = rand % 21;\\n        if (greatness > 14) {\\n            output = string(abi.encodePacked(output, \\\" \\\", suffixes[rand % suffixes.length]));\\n        }\\n        if (greatness >= 19) {\\n            string[2] memory name;\\n            name[0] = namePrefixes[rand % namePrefixes.length];\\n            name[1] = nameSuffixes[rand % nameSuffixes.length];\\n            if (greatness == 19) {\\n                output = string(abi.encodePacked('\\\"', name[0], ' ', name[1], '\\\" ', output));\\n            } else {\\n                output = string(abi.encodePacked('\\\"', name[0], ' ', name[1], '\\\" ', output, \\\" +1\\\"));\\n            }\\n        }\\n        return output;\\n    }\\n\\n    function pluck(address walletAddress, string memory keyPrefix, string[] memory sourceArray) internal view returns (uint256[5] memory) {\\n        uint256[5] memory components;\\n\\n        uint256 rand = random(string(abi.encodePacked(keyPrefix, abi.encodePacked(walletAddress))));\\n\\n        components[0] = rand % sourceArray.length;\\n        components[1] = 0;\\n        components[2] = 0;\\n\\n        uint256 greatness = rand % 21;\\n        if (greatness > 14) {\\n            components[1] = (rand % suffixes.length) + 1;\\n        }\\n        if (greatness >= 19) {\\n            components[2] = (rand % namePrefixes.length) + 1;\\n            components[3] = (rand % nameSuffixes.length) + 1;\\n            if (greatness == 19) {\\n                // ...\\n            } else {\\n                components[4] = 1;\\n            }\\n        }\\n        return components;\\n    }\\n\\n    function tokenURI(address walletAddress) public view returns (string memory) {\\n        string[17] memory parts;\\n        parts[0] = '<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" preserveAspectRatio=\\\"xMinYMin meet\\\" viewBox=\\\"0 0 350 350\\\"><style>.base { fill: white; font-family: serif; font-size: 14px; }</style><rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"black\\\" /><text x=\\\"10\\\" y=\\\"20\\\" class=\\\"base\\\">';\\n\\n        parts[1] = getWeapon(walletAddress);\\n\\n        parts[2] = '</text><text x=\\\"10\\\" y=\\\"40\\\" class=\\\"base\\\">';\\n\\n        parts[3] = getChest(walletAddress);\\n\\n        parts[4] = '</text><text x=\\\"10\\\" y=\\\"60\\\" class=\\\"base\\\">';\\n\\n        parts[5] = getHead(walletAddress);\\n\\n        parts[6] = '</text><text x=\\\"10\\\" y=\\\"80\\\" class=\\\"base\\\">';\\n\\n        parts[7] = getWaist(walletAddress);\\n\\n        parts[8] = '</text><text x=\\\"10\\\" y=\\\"100\\\" class=\\\"base\\\">';\\n\\n        parts[9] = getFoot(walletAddress);\\n\\n        parts[10] = '</text><text x=\\\"10\\\" y=\\\"120\\\" class=\\\"base\\\">';\\n\\n        parts[11] = getHand(walletAddress);\\n\\n        parts[12] = '</text><text x=\\\"10\\\" y=\\\"140\\\" class=\\\"base\\\">';\\n\\n        parts[13] = getNeck(walletAddress);\\n\\n        parts[14] = '</text><text x=\\\"10\\\" y=\\\"160\\\" class=\\\"base\\\">';\\n\\n        parts[15] = getRing(walletAddress);\\n\\n        parts[16] = '</text></svg>';\\n\\n        string memory output = string(abi.encodePacked(parts[0], parts[1], parts[2], parts[3], parts[4], parts[5], parts[6], parts[7], parts[8]));\\n        output = string(abi.encodePacked(output, parts[9], parts[10], parts[11], parts[12], parts[13], parts[14], parts[15], parts[16]));\\n\\n        string memory json = Base64.encode(bytes(string(abi.encodePacked('{\\\"name\\\": \\\"Bag 0x', toAsciiString(walletAddress), '\\\", \\\"description\\\": \\\"Loot is randomized adventurer gear generated and stored on chain. Stats, images, and other functionality are intentionally omitted for others to interpret. Feel free to use Loot in any way you want.\\\", \\\"image\\\": \\\"data:image/svg+xml;base64,', Base64.encode(bytes(output)), '\\\"}'))));\\n        output = string(abi.encodePacked('data:application/json;base64,', json));\\n\\n        return output;\\n    }\\n\\n    // https://ethereum.stackexchange.com/a/8447\\n    function toAsciiString(address x) internal pure returns (string memory) {\\n        bytes memory s = new bytes(40);\\n        for (uint i = 0; i < 20; i++) {\\n            bytes1 b = bytes1(uint8(uint(uint160(x)) / (2**(8*(19 - i)))));\\n            bytes1 hi = bytes1(uint8(b) / 16);\\n            bytes1 lo = bytes1(uint8(b) - 16 * uint8(hi));\\n            s[2*i] = char(hi);\\n            s[2*i+1] = char(lo);\\n        }\\n        return string(s);\\n    }\\n\\n    // https://ethereum.stackexchange.com/a/8447\\n    function char(bytes1 b) internal pure returns (bytes1 c) {\\n        if (uint8(b) < 10) return bytes1(uint8(b) + 0x30);\\n        else return bytes1(uint8(b) + 0x57);\\n    }\\n}\\n\\n/// [MIT License]\\n/// @title Base64\\n/// @notice Provides a function for encoding some bytes in base64\\n/// @author Brecht Devos <brecht@loopring.org>\\nlibrary Base64 {\\n    bytes internal constant TABLE = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n\\n    /// @notice Encodes some bytes to the base64 representation\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        uint256 len = data.length;\\n        if (len == 0) return \\\"\\\";\\n\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((len + 2) / 3);\\n\\n        // Add some extra buffer at the end\\n        bytes memory result = new bytes(encodedLen + 32);\\n\\n        bytes memory table = TABLE;\\n\\n        assembly {\\n            let tablePtr := add(table, 1)\\n            let resultPtr := add(result, 32)\\n\\n            for {\\n                let i := 0\\n            } lt(i, len) {\\n\\n            } {\\n                i := add(i, 3)\\n                let input := and(mload(add(data, i)), 0xffffff)\\n\\n                let out := mload(add(tablePtr, and(shr(18, input), 0x3F)))\\n                out := shl(8, out)\\n                out := add(out, and(mload(add(tablePtr, and(shr(12, input), 0x3F))), 0xFF))\\n                out := shl(8, out)\\n                out := add(out, and(mload(add(tablePtr, and(shr(6, input), 0x3F))), 0xFF))\\n                out := shl(8, out)\\n                out := add(out, and(mload(add(tablePtr, and(input, 0x3F))), 0xFF))\\n                out := shl(224, out)\\n\\n                mstore(resultPtr, out)\\n\\n                resultPtr := add(resultPtr, 4)\\n            }\\n\\n            switch mod(len, 3)\\n            case 1 {\\n                mstore(sub(resultPtr, 2), shl(240, 0x3d3d))\\n            }\\n            case 2 {\\n                mstore(sub(resultPtr, 1), shl(248, 0x3d))\\n            }\\n\\n            mstore(result, encodedLen)\\n        }\\n\\n        return string(result);\\n    }\\n}\\n\",\"keccak256\":\"0x54b45359809bf6e866ed3844643d374100df0df66a2bc568976e9e4bd1fd7e1b\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x60096102c0818152682bb0b93430b6b6b2b960b91b6102e0526080908152600c6103009081526b28bab0b93a32b939ba30b33360a11b6103205260a05260046103408181526313585d5b60e21b6103605260c052610380818152634d61636560e01b6103a05260e0526103c08181526321b63ab160e11b6103e052610100526006610400908152654b6174616e6160d01b61042052610120526008610440818152672330b631b434b7b760c11b61046052610140526104808181526729b1b4b6b4ba30b960c11b6104a05261016052600a6104c081815269131bdb99c814dddbdc9960b21b6104e05261018052600b6105009081526a14da1bdc9d0814dddbdc9960aa1b610520526101a0526105408181526911da1bdcdd0815d85b9960b21b610560526101c0526105809081526911dc985d994815d85b9960b21b6105a0526101e0526105c084815268109bdb994815d85b9960ba1b6105e052610200526106008281526315d85b9960e21b6106205261022052610640908152674772696d6f69726560c01b6106605261024052610680928352684368726f6e69636c6560b81b6106a052610260929092526106c082815263546f6d6560e01b6106e0526102805261074060405261070091825263426f6f6b60e01b610720526102a091909152620001f190600090601262001c49565b506040805161022081018252600b6101e082019081526a446976696e6520526f626560a81b61020083015281528151808301835260098082526853696c6b20526f626560b81b6020838101919091528084019290925283518085018552600a808252694c696e656e20526f626560b01b8285015284860191909152845180860186526004815263526f626560e01b81850152606085015284518086018652600581526414da1a5c9d60da1b818501526080850152845180860186528181526944656d6f6e204875736b60b01b8185015260a085015284518086018652601081526f223930b3b7b739b5b4b71020b936b7b960811b8185015260c085015284518086018652601581527f53747564646564204c6561746865722041726d6f7200000000000000000000008185015260e08501528451808601865260128152712430b932102632b0ba3432b91020b936b7b960711b8185015261010085015284518086018652600d81526c2632b0ba3432b91020b936b7b960991b8185015261012085015284518086018652600f8082526e486f6c79204368657374706c61746560881b828601526101408601919091528551808701875260118152704f726e617465204368657374706c61746560781b818601526101608601528551808701875282815269141b185d194813585a5b60b21b81860152610180860152855180870187529182526910da185a5b8813585a5b60b21b828501526101a0850191909152845180860190955290845268149a5b99c813585a5b60ba1b918401919091526101c082019290925262000448916001919062001cad565b506040805161022081018252600c6101e082019081526b416e6369656e742048656c6d60a01b610200830152815281518083018352600b8082526a4f726e6174652048656c6d60a81b6020838101919091528084019290925283518085018552600a8082526947726561742048656c6d60b01b82850152848601919091528451808601865260098082526846756c6c2048656c6d60b81b8286015260608601919091528551808701875260048082526348656c6d60e01b828701526080870191909152865180880188528481526a2232b6b7b71021b937bbb760a91b8187015260a087015286518088018852600e81526d223930b3b7b713b99021b937bbb760911b8187015260c08701528651808801885260078152660576172204361760cc1b8187015260e0870152865180880188528481526a04c656174686572204361760ac1b8187015261010087015286518088018852600381526204361760ec1b8187015261012087015286518088018852600581526421b937bbb760d91b81870152610140870152865180880188529384526a111a5d9a5b9948121bdbd960aa1b84860152610160860193909352855180870187529081526814da5b1ac8121bdbd960ba1b818501526101808501528451808601865290815269131a5b995b88121bdbd960b21b818401526101a08401528351808501909452835263121bdbd960e21b908301526101c08101919091526200066790600290600f62001cad565b506040805161022081018252600b6101e082018181526a13dc9b985d194810995b1d60aa1b610200840152825282518084018452600881526715d85c8810995b1d60c21b60208281019190915280840191909152835180850185529182526a141b185d19590810995b1d60aa1b82820152828401919091528251808401845260098082526813595cda0810995b1d60ba1b82840152606084019190915283518085018552600a808252691219585d9e4810995b1d60b21b82850152608085019190915284518086018652600e81526d11195b5bdb9a1a59194810995b1d60921b8185015260a085015284518086018652600f8082526e111c9859dbdb9cdada5b8810995b1d608a1b8286015260c086019190915285518087018752601481527f53747564646564204c6561746865722042656c740000000000000000000000008186015260e086015285518087018752601181527012185c99081319585d1a195c8810995b1d607a1b8186015261010086015285518087018752600c81526b1319585d1a195c8810995b1d60a21b81860152610120860152855180870187528181526e084e4d2ced0e8e6d2d8d640a6c2e6d608b1b8186015261014086015285518087018752838152680a6d2d8d640a6c2e6d60bb1b8186015261016086015285518087018752928352680aededed840a6c2e6d60bb1b838501526101808501929092528451808601865290815269098d2dccadc40a6c2e6d60b31b818401526101a0840152835180850190945260048452630a6c2e6d60e31b918401919091526101c0820192909252620008c0916003919062001cad565b506040805161022081018252600c6101e082019081526b486f6c79204772656176657360a01b610200830152815281518083018352600e81526d4f726e617465204772656176657360901b602082810191909152808301919091528251808401845260078152664772656176657360c81b818301528284015282518084018452600b8082526a436861696e20426f6f747360a81b828401526060840191909152835180850185528181526a486561767920426f6f747360a81b81840152608084015283518085018552600f8082526e44656d6f6e6869646520426f6f747360881b8285015260a085019190915284518086018652601081526f447261676f6e736b696e20426f6f747360801b8185015260c085015284518086018652601581527f53747564646564204c65617468657220426f6f747300000000000000000000008185015260e085015284518086018652601281527148617264204c65617468657220426f6f747360701b8185015261010085015284518086018652600d8082526c4c65617468657220426f6f747360981b82860152610120860191909152855180870187528281526e446976696e6520536c69707065727360881b81860152610140860152855180870187529081526c53696c6b20536c69707065727360981b8185015261016085015284518086018652600a815269576f6f6c2053686f657360b01b81850152610180850152845180860186529182526a4c696e656e2053686f657360a81b828401526101a08401919091528351808501909452600584526453686f657360d81b918401919091526101c082019290925262000b28916004919062001cad565b506040805161022081018252600e6101e082018181526d486f6c79204761756e746c65747360901b610200840152825282518084018452601081526f4f726e617465204761756e746c65747360801b602082810191909152808401919091528351808501855260098152684761756e746c65747360b81b818301528385015283518085018552600c8082526b436861696e20476c6f76657360a01b828401526060850191909152845180860186528181526b486561767920476c6f76657360a01b81840152608085015284518086018652600d8082526c44656d6f6e27732048616e647360981b8285015260a0860191909152855180870187526011815270447261676f6e736b696e20476c6f76657360781b8185015260c086015285518087018752601681527f53747564646564204c65617468657220476c6f766573000000000000000000008185015260e086015285518087018752601381527f48617264204c65617468657220476c6f7665730000000000000000000000000081850152610100860152855180870187529384526d4c65617468657220476c6f76657360901b84840152610120850193909352845180860186529283526c446976696e6520476c6f76657360981b8383015261014084019290925283518085018552600b8082526a53696c6b20476c6f76657360a81b82840152610160850191909152845180860186529081526a576f6f6c20476c6f76657360a81b81830152610180840152835180850185529182526b4c696e656e20476c6f76657360a01b828201526101a083019190915282518084019093526006835265476c6f76657360d01b908301526101c081019190915262000da590600590600f62001cad565b506040805160a081018252600860608201908152674e65636b6c61636560c01b6080830152815281518083018352600680825265105b5d5b195d60d21b6020838101919091528084019290925283518085018552600781526614195b99185b9d60ca1b928101929092529282015262000e219190600362001cff565b506040805160e081018252600960a0820190815268476f6c642052696e6760b81b60c0830152815281518083018352600b8082526a53696c7665722052696e6760a81b60208381019190915280840192909252835180850185529081526a42726f6e7a652052696e6760a81b818301528284015282518084018452600d8082526c506c6174696e756d2052696e6760981b828401526060840191909152835180850190945283526c546974616e69756d2052696e6760981b90830152608081019190915262000ef590600790600562001d51565b506040518061020001604052806040518060400160405280600881526020016737b3102837bbb2b960c11b8152508152602001604051806040016040528060098152602001686f66204769616e747360b81b8152508152602001604051806040016040528060098152602001686f6620546974616e7360b81b8152508152602001604051806040016040528060088152602001671bd98814dada5b1b60c21b81525081526020016040518060400160405280600d81526020016c37b3102832b93332b1ba34b7b760991b81525081526020016040518060400160405280600d81526020016c6f66204272696c6c69616e636560981b81525081526020016040518060400160405280601081526020016f1bd988115b9b1a59da1d195b9b595b9d60821b81525081526020016040518060400160405280600d81526020016c37b310283937ba32b1ba34b7b760991b81525081526020016040518060400160405280600881526020016737b31020b733b2b960c11b8152508152602001604051806040016040528060078152602001666f66205261676560c81b8152508152602001604051806040016040528060078152602001666f66204675727960c81b81525081526020016040518060400160405280600a8152602001691bd988159a5d1c9a5bdb60b21b81525081526020016040518060400160405280600a8152602001690decc40e8d0ca408cdef60b31b81525081526020016040518060400160405280600c81526020016b37b3102232ba32b1ba34b7b760a11b81525081526020016040518060400160405280600d81526020016c37b3102932b33632b1ba34b7b760991b81525081526020016040518060400160405280600c81526020016b6f6620746865205477696e7360a01b81525081525060089060106200119a92919062001da3565b50604080516108e08101825260056108a082018181526441676f6e7960d81b6108c0840152825282518084018452600a8082526941706f63616c7970736560b01b60208381019190915280850192909252845180860186528181526920b936b0b3b2b23237b760b11b818401528486015284518086018652838152641099585cdd60da1b81840152606085015284518086018652600880825267084cad0cadadee8d60c31b82850152608086019190915285518087018752600680825265109b1a59da1d60d21b8286015260a08701919091528651808801885285815264109b1bdbd960da1b8186015260c0870152865180880188526007808252664272616d626c6560c81b8287015260e0880191909152875180890189526009808252684272696d73746f6e6560b81b828801526101008901919091528851808a018a5287815264109c9bdbd960da1b818801526101208901528851808a018a528281526621b0b93934b7b760c91b818801526101408901528851808a018a528181526843617461636c79736d60b81b818801526101608901528851808a018a52848152674368696d6572696360c01b818801526101808901528851808a018a5283815265436f7270736560d01b818801526101a08901528851808a018a528581526921b7b9393ab83a34b7b760b11b818801526101c08901528851808a018a52818152682230b6b730ba34b7b760b91b818801526101e08901528851808a018a5287815264088cac2e8d60db1b818801526102008901528851808a018a52878152642232b6b7b760d91b818801526102208901528851808a018a526004808252634469726560e01b828901526102408a01919091528951808b018b5284815265223930b3b7b760d11b818901526102608a01528951808b018b5288815264111c99585960da1b818901526102808a01528951808b018b5281815263446f6f6d60e01b818901526102a08a01528951808b018b52818152634475736b60e01b818901526102c08a01528951808b018b52888152644561676c6560d81b818901526102e08a01528951808b018b528581526722b6b83cb932b0b760c11b818901526103008a01528951808b018b52818152634661746560e01b818901526103208a01528951808b018b52600380825262466f6560e81b828a01526103408b01919091528a51808c018c528281526347616c6560e01b818a01526103608b01528a51808c018c528981526411da1bdd5b60da1b818a01526103808b01528a51808c018c5289815264476c6f6f6d60d81b818a01526103a08b01528a51808c018c528981526408ed8f2e0d60db1b818a01526103c08b01528a51808c018c5289815264476f6c656d60d81b818a01526103e08b01528a51808c018c52828152634772696d60e01b818a01526104008b01528a51808c018c52828152634861746560e01b818a01526104208b01528a51808c018c52898152644861766f6360d81b818a01526104408b01528a51808c018c52858152652437b737bab960d11b818a01526104608b01528a51808c018c52858152652437b93937b960d11b818a01526104808b01528a51808c018c52868152674879706e6f74696360c01b818a01526104a08b01528a51808c018c528581526525b930b5b2b760d11b818a01526104c08b01528a51808c018c5289815264098dec2e8d60db1b818a01526104e08b01528a51808c018c52838152684d61656c7374726f6d60b81b818a01526105008b01528a51808c018c5282815263135a5b9960e21b818a01526105208b01528a51808c018c52848152664d697261636c6560c81b818a01526105408b01528a51808c018c5285815265135bdc989a5960d21b818a01526105608b01528a51808c018c529586526727b13634bb34b7b760c11b868901526105808a01959095528951808b018b528281526813db9cdb185d59da1d60ba1b818901526105a08a01528951808b018b52818152632830b4b760e11b818901526105c08a01528951808b018b52600b81526a50616e64656d6f6e69756d60a81b818901526105e08a01528951808b018b52838152660a0d0decadcd2f60cb1b818901526106008a01528951808b018b5284815265506c6167756560d01b818901526106208a01528951808b018b52818152635261676560e01b818901526106408a01528951808b018b52838152665261707475726560c81b818901526106608a01528951808b018b528181526352756e6560e01b818901526106808a01528951808b018b528881526414dadd5b1b60da1b818901526106a08a01528951808b018b528581526214dbdb60ea1b818901526106c08a01528951808b018b529081526314dbdd5b60e21b818801526106e08901528851808a018a5283815265536f72726f7760d01b818801526107008901528851808a018a528381526514dc1a5c9a5d60d21b818801526107208901528851808a018a528781526453746f726d60d81b818801526107408901528851808a018a528281526615195b5c195cdd60ca1b818801526107608901528851808a018a5282815266151bdc9b595b9d60ca1b818801526107808901528851808a018a528181526856656e6765616e636560b81b818801526107a08901528851808a018a5282815266566963746f727960c81b818801526107c08901528851808a018a52878152642b34b832b960d91b818801526107e08901528851808a018a52928352650acdee4e8caf60d31b838701526108008801929092528751808901895292835262576f6560e81b8386015261082087019290925286518088018852948552640aee4c2e8d60db1b8585015261084086019490945285518087018752908152664c69676874277360c81b8184015261086085015284518086019095528452695368696d6d6572696e6760b01b90840152610880820192909252620019fe9190604562001df5565b506040805161028081018252600461024082018181526342616e6560e01b61026084015282528251808401845281815263149bdbdd60e21b6020828101919091528084019190915283518085018552828152634269746560e01b81830152838501528351808501855282815263536f6e6760e01b81830152606084015283518085018552828152632937b0b960e11b81830152608084015283518085018552600580825264047726173760dc1b8284015260a085019190915284518086018652600a80825269125b9cdd1c9d5b595b9d60b21b8285015260c08601919091528551808701875284815263476c6f7760e01b8185015260e0860152855180870187526006808252652132b73232b960d11b828601526101008701919091528651808801885290815265536861646f7760d01b818501526101208601528551808701875260078152662bb434b9b832b960c91b81850152610140860152855180870187528281526414da1bdd5d60da1b81850152610160860152855180870187529182526411dc9bdddb60da1b8284015261018085019190915284518086018652838152632a32b0b960e11b818401526101a085015284518086018652838152635065616b60e01b818401526101c08501528451808601865283815263466f726d60e01b818401526101e085015284518086018652600381526229bab760e91b8184015261020085015284518086019095529184526326b7b7b760e11b9084015261022082019290925262001c349190601262001c49565b5034801562001c4257600080fd5b5062001f89565b82805482825590600052602060002090810192821562001c9b579160200282015b8281111562001c9b578251805162001c8a91849160209091019062001e47565b509160200191906001019062001c6a565b5062001ca992915062001ed2565b5090565b82805482825590600052602060002090810192821562001c9b579160200282015b8281111562001c9b578251805162001cee91849160209091019062001e47565b509160200191906001019062001cce565b82805482825590600052602060002090810192821562001c9b579160200282015b8281111562001c9b578251805162001d4091849160209091019062001e47565b509160200191906001019062001d20565b82805482825590600052602060002090810192821562001c9b579160200282015b8281111562001c9b578251805162001d9291849160209091019062001e47565b509160200191906001019062001d72565b82805482825590600052602060002090810192821562001c9b579160200282015b8281111562001c9b578251805162001de491849160209091019062001e47565b509160200191906001019062001dc4565b82805482825590600052602060002090810192821562001c9b579160200282015b8281111562001c9b578251805162001e3691849160209091019062001e47565b509160200191906001019062001e16565b82805462001e559062001f4c565b90600052602060002090601f01602090048101928262001e79576000855562001ec4565b82601f1062001e9457805160ff191683800117855562001ec4565b8280016001018555821562001ec4579182015b8281111562001ec457825182559160200191906001019062001ea7565b5062001ca992915062001ef3565b8082111562001ca957600062001ee9828262001f0a565b5060010162001ed2565b5b8082111562001ca9576000815560010162001ef4565b50805462001f189062001f4c565b6000825580601f1062001f29575050565b601f01602090049060005260206000209081019062001f49919062001ef3565b50565b600181811c9082168062001f6157607f821691505b6020821081141562001f8357634e487b7160e01b600052602260045260246000fd5b50919050565b612bbc8062001f996000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c806396a7bb85116100b2578063c3893a9a11610081578063ddc8422d11610066578063ddc8422d1461024d578063e73702cf14610260578063ffcd9d451461027357600080fd5b8063c3893a9a14610227578063c65cd97d1461023a57600080fd5b806396a7bb85146101db578063b4630ab0146101ee578063b5fb5fa414610201578063bbfa3d4a1461021457600080fd5b806357e3d14d116100ee57806357e3d14d1461018f5780636c390589146101a25780637d9d7cc2146101b557806393702f33146101c857600080fd5b80630d2f25be146101205780633c607b6714610149578063455ba9ca1461015c57806346d868c71461017c575b600080fd5b61013361012e366004611ee2565b610286565b604051610140919061251b565b60405180910390f35b610133610157366004611ee2565b61039f565b61016f61016a366004611ee2565b6104a9565b60405161014091906124ea565b61013361018a366004611ee2565b6105c2565b61016f61019d366004611ee2565b6106cc565b61016f6101b0366004611ee2565b6107dc565b61016f6101c3366004611ee2565b6108ec565b6101336101d6366004611ee2565b6109fc565b61016f6101e9366004611ee2565b610cf0565b61016f6101fc366004611ee2565b610e00565b61016f61020f366004611ee2565b610f10565b610133610222366004611ee2565b611020565b610133610235366004611ee2565b61112a565b610133610248366004611ee2565b611234565b61013361025b366004611ee2565b61133e565b61016f61026e366004611ee2565b611448565b610133610281366004611ee2565b611558565b6060610399826040518060400160405280600481526020017f52494e47000000000000000000000000000000000000000000000000000000008152506007805480602002602001604051908101604052809291908181526020016000905b82821015610390578382906000526020600020018054610303906127d0565b80601f016020809104026020016040519081016040528092919081815260200182805461032f906127d0565b801561037c5780601f106103515761010080835404028352916020019161037c565b820191906000526020600020905b81548152906001019060200180831161035f57829003601f168201915b5050505050815260200190600101906102e4565b50505050611662565b92915050565b6060610399826040518060400160405280600581526020017f43484553540000000000000000000000000000000000000000000000000000008152506001805480602002602001604051908101604052809291908181526020016000905b8282101561039057838290600052602060002001805461041c906127d0565b80601f0160208091040260200160405190810160405280929190818152602001828054610448906127d0565b80156104955780601f1061046a57610100808354040283529160200191610495565b820191906000526020600020905b81548152906001019060200180831161047857829003601f168201915b5050505050815260200190600101906103fd565b6104b1611e83565b610399826040518060400160405280600581526020017f57414953540000000000000000000000000000000000000000000000000000008152506003805480602002602001604051908101604052809291908181526020016000905b828210156105b957838290600052602060002001805461052c906127d0565b80601f0160208091040260200160405190810160405280929190818152602001828054610558906127d0565b80156105a55780601f1061057a576101008083540402835291602001916105a5565b820191906000526020600020905b81548152906001019060200180831161058857829003601f168201915b50505050508152602001906001019061050d565b50505050611999565b6060610399826040518060400160405280600681526020017f574541504f4e00000000000000000000000000000000000000000000000000008152506000805480602002602001604051908101604052809291908181526020016000905b8282101561039057838290600052602060002001805461063f906127d0565b80601f016020809104026020016040519081016040528092919081815260200182805461066b906127d0565b80156106b85780601f1061068d576101008083540402835291602001916106b8565b820191906000526020600020905b81548152906001019060200180831161069b57829003601f168201915b505050505081526020019060010190610620565b6106d4611e83565b610399826040518060400160405280600481526020017f48414e44000000000000000000000000000000000000000000000000000000008152506005805480602002602001604051908101604052809291908181526020016000905b828210156105b957838290600052602060002001805461074f906127d0565b80601f016020809104026020016040519081016040528092919081815260200182805461077b906127d0565b80156107c85780601f1061079d576101008083540402835291602001916107c8565b820191906000526020600020905b8154815290600101906020018083116107ab57829003601f168201915b505050505081526020019060010190610730565b6107e4611e83565b610399826040518060400160405280600681526020017f574541504f4e00000000000000000000000000000000000000000000000000008152506000805480602002602001604051908101604052809291908181526020016000905b828210156105b957838290600052602060002001805461085f906127d0565b80601f016020809104026020016040519081016040528092919081815260200182805461088b906127d0565b80156108d85780601f106108ad576101008083540402835291602001916108d8565b820191906000526020600020905b8154815290600101906020018083116108bb57829003601f168201915b505050505081526020019060010190610840565b6108f4611e83565b610399826040518060400160405280600481526020017f48454144000000000000000000000000000000000000000000000000000000008152506002805480602002602001604051908101604052809291908181526020016000905b828210156105b957838290600052602060002001805461096f906127d0565b80601f016020809104026020016040519081016040528092919081815260200182805461099b906127d0565b80156109e85780601f106109bd576101008083540402835291602001916109e8565b820191906000526020600020905b8154815290600101906020018083116109cb57829003601f168201915b505050505081526020019060010190610950565b6060610a06611ea1565b60405180610120016040528060fd81526020016129f960fd91398152610a2b836105c2565b8160016020020181905250604051806060016040528060288152602001612b5f602891396040820152610a5d8361039f565b606080830191909152604080519182019052602880825261292e60208301396080820152610a8a83611020565b60a0820152604080516060810190915260288082526129a8602083013960c0820152610ab583611558565b60e0820152604080516060810190915260298082526129d06020830139610100820152610ae183611234565b6101208201526040805160608101909152602980825261297f6020830139610140820152610b0e8361112a565b61016082015260408051606081019091526029808252612af66020830139610180820152610b3b8361133e565b6101a08201526040805160608101909152602980825261295660208301396101c0820152610b6883610286565b6101e0820152604080518082018252600d81527f3c2f746578743e3c2f7376673e00000000000000000000000000000000000000602080830191909152610200840191909152825181840151838501516060860151608087015160a088015160c089015160e08a01516101008b0151995160009a610be89a909101611f6a565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018152908290526101208401516101408501516101608601516101808701516101a08801516101c08901516101e08a01516102008b0151979950610c59988a9890602001611f6a565b60405160208183030381529060405290506000610ca6610c7886611aa1565b610c8184611c25565b604051602001610c929291906122e7565b604051602081830303815290604052611c25565b905080604051602001610cb991906124a5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905295945050505050565b610cf8611e83565b610399826040518060400160405280600581526020017f43484553540000000000000000000000000000000000000000000000000000008152506001805480602002602001604051908101604052809291908181526020016000905b828210156105b9578382906000526020600020018054610d73906127d0565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9f906127d0565b8015610dec5780601f10610dc157610100808354040283529160200191610dec565b820191906000526020600020905b815481529060010190602001808311610dcf57829003601f168201915b505050505081526020019060010190610d54565b610e08611e83565b610399826040518060400160405280600481526020017f4e45434b000000000000000000000000000000000000000000000000000000008152506006805480602002602001604051908101604052809291908181526020016000905b828210156105b9578382906000526020600020018054610e83906127d0565b80601f0160208091040260200160405190810160405280929190818152602001828054610eaf906127d0565b8015610efc5780601f10610ed157610100808354040283529160200191610efc565b820191906000526020600020905b815481529060010190602001808311610edf57829003601f168201915b505050505081526020019060010190610e64565b610f18611e83565b610399826040518060400160405280600481526020017f464f4f54000000000000000000000000000000000000000000000000000000008152506004805480602002602001604051908101604052809291908181526020016000905b828210156105b9578382906000526020600020018054610f93906127d0565b80601f0160208091040260200160405190810160405280929190818152602001828054610fbf906127d0565b801561100c5780601f10610fe15761010080835404028352916020019161100c565b820191906000526020600020905b815481529060010190602001808311610fef57829003601f168201915b505050505081526020019060010190610f74565b6060610399826040518060400160405280600481526020017f48454144000000000000000000000000000000000000000000000000000000008152506002805480602002602001604051908101604052809291908181526020016000905b8282101561039057838290600052602060002001805461109d906127d0565b80601f01602080910402602001604051908101604052809291908181526020018280546110c9906127d0565b80156111165780601f106110eb57610100808354040283529160200191611116565b820191906000526020600020905b8154815290600101906020018083116110f957829003601f168201915b50505050508152602001906001019061107e565b6060610399826040518060400160405280600481526020017f48414e44000000000000000000000000000000000000000000000000000000008152506005805480602002602001604051908101604052809291908181526020016000905b828210156103905783829060005260206000200180546111a7906127d0565b80601f01602080910402602001604051908101604052809291908181526020018280546111d3906127d0565b80156112205780601f106111f557610100808354040283529160200191611220565b820191906000526020600020905b81548152906001019060200180831161120357829003601f168201915b505050505081526020019060010190611188565b6060610399826040518060400160405280600481526020017f464f4f54000000000000000000000000000000000000000000000000000000008152506004805480602002602001604051908101604052809291908181526020016000905b828210156103905783829060005260206000200180546112b1906127d0565b80601f01602080910402602001604051908101604052809291908181526020018280546112dd906127d0565b801561132a5780601f106112ff5761010080835404028352916020019161132a565b820191906000526020600020905b81548152906001019060200180831161130d57829003601f168201915b505050505081526020019060010190611292565b6060610399826040518060400160405280600481526020017f4e45434b000000000000000000000000000000000000000000000000000000008152506006805480602002602001604051908101604052809291908181526020016000905b828210156103905783829060005260206000200180546113bb906127d0565b80601f01602080910402602001604051908101604052809291908181526020018280546113e7906127d0565b80156114345780601f1061140957610100808354040283529160200191611434565b820191906000526020600020905b81548152906001019060200180831161141757829003601f168201915b50505050508152602001906001019061139c565b611450611e83565b610399826040518060400160405280600481526020017f52494e47000000000000000000000000000000000000000000000000000000008152506007805480602002602001604051908101604052809291908181526020016000905b828210156105b95783829060005260206000200180546114cb906127d0565b80601f01602080910402602001604051908101604052809291908181526020018280546114f7906127d0565b80156115445780601f1061151957610100808354040283529160200191611544565b820191906000526020600020905b81548152906001019060200180831161152757829003601f168201915b5050505050815260200190600101906114ac565b6060610399826040518060400160405280600581526020017f57414953540000000000000000000000000000000000000000000000000000008152506003805480602002602001604051908101604052809291908181526020016000905b828210156103905783829060005260206000200180546115d5906127d0565b80601f0160208091040260200160405190810160405280929190818152602001828054611601906127d0565b801561164e5780601f106116235761010080835404028352916020019161164e565b820191906000526020600020905b81548152906001019060200180831161163157829003601f168201915b5050505050815260200190600101906115b6565b606060006116f684866040516020016116a6919060609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016815260140190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526116e29291602001611f3b565b604051602081830303815290604052611dfe565b9050600083845183611708919061285d565b81518110611718576117186128cf565b602002602001015190506000601583611731919061285d565b9050600e81111561178a576008805483919061174d908661285d565b8154811061175d5761175d6128cf565b9060005260206000200160405160200161177892919061202a565b60405160208183030381529060405291505b6013811061198f5761179a611ec9565b600980546117a8908661285d565b815481106117b8576117b86128cf565b9060005260206000200180546117cd906127d0565b80601f01602080910402602001604051908101604052809291908181526020018280546117f9906127d0565b80156118465780601f1061181b57610100808354040283529160200191611846565b820191906000526020600020905b81548152906001019060200180831161182957829003601f168201915b50505050508160006002811061185e5761185e6128cf565b6020020152600a8054611871908661285d565b81548110611881576118816128cf565b906000526020600020018054611896906127d0565b80601f01602080910402602001604051908101604052809291908181526020018280546118c2906127d0565b801561190f5780601f106118e45761010080835404028352916020019161190f565b820191906000526020600020905b8154815290600101906020018083116118f257829003601f168201915b505050505081600160028110611927576119276128cf565b6020020152601382141561196357805160208083015160405161194d939287910161213d565b604051602081830303815290604052925061198d565b805160208083015160405161197b93928791016121fd565b60405160208183030381529060405292505b505b5095945050505050565b6119a1611e83565b6119a9611e83565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606087901b1660208201526000906119e99086906034016116a6565b90508351816119f8919061285d565b825260006020830181905260408301819052611a1560158361285d565b9050600e811115611a3e57600854611a2d908361285d565b611a3890600161256c565b60208401525b60138110611a9657600954611a53908361285d565b611a5e90600161256c565b6040840152600a54611a70908361285d565b611a7b90600161256c565b60608401526013811415611a8e57611a96565b600160808401525b509095945050505050565b60408051602880825260608281019093526000919060208201818036833701905050905060005b6014811015611c1e576000611ade826013612766565b611ae9906008612708565b611af4906002612642565b611b149073ffffffffffffffffffffffffffffffffffffffff87166125a9565b60f81b9050600060108260f81c611b2b91906125bd565b60f81b905060008160f81c6010611b429190612745565b8360f81c611b50919061277d565b60f81b9050611b5e82611e4d565b85611b6a866002612708565b81518110611b7a57611b7a6128cf565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611bb281611e4d565b85611bbe866002612708565b611bc990600161256c565b81518110611bd957611bd96128cf565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505050508080611c1690612824565b915050611ac8565b5092915050565b805160609080611c45575050604080516020810190915260008152919050565b60006003611c5483600261256c565b611c5e91906125a9565b611c69906004612708565b90506000611c7882602061256c565b67ffffffffffffffff811115611c9057611c906128fe565b6040519080825280601f01601f191660200182016040528015611cba576020820181803683370190505b5090506000604051806060016040528060408152602001612b1f604091399050600181016020830160005b86811015611d46576003818a01810151603f601282901c8116860151600c83901c8216870151600684901c831688015192909316870151600891821b60ff94851601821b92841692909201901b91160160e01b835260049092019101611ce5565b506003860660018114611d605760028114611daa57611df0565b7f3d3d0000000000000000000000000000000000000000000000000000000000007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe830152611df0565b7f3d000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8301525b505050918152949350505050565b600081604051602001611e119190611f1f565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012092915050565b6000600a60f883901c1015611e7457611e6b60f883901c6030612584565b60f81b92915050565b611e6b60f883901c6057612584565b6040518060a001604052806005906020820280368337509192915050565b6040518061022001604052806011905b6060815260200190600190039081611eb15790505090565b6040805180820190915260608152600160208201611eb1565b600060208284031215611ef457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114611f1857600080fd5b9392505050565b60008251611f318184602087016127a0565b9190910192915050565b60008351611f4d8184602088016127a0565b835190830190611f618183602088016127a0565b01949350505050565b60008a51611f7c818460208f016127a0565b8a51611f8e8183860160208f016127a0565b8a519184010190611fa3818360208e016127a0565b8951611fb58183850160208e016127a0565b8951929091010190611fcb818360208c016127a0565b8751611fdd8183850160208c016127a0565b8751929091010190611ff3818360208a016127a0565b85519101906120068183602089016127a0565b845161201881838501602089016127a0565b9101019b9a5050505050505050505050565b60008351602061203d82858389016127a0565b7f2000000000000000000000000000000000000000000000000000000000000000918401918252845460019060009080831c8184168061207e57607f821691505b8582108114156120b5577f4e487b710000000000000000000000000000000000000000000000000000000084526022600452602484fd5b8080156120c957600181146120fc5761212d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008416868901528583890101945061212d565b60008b81526020902060005b848110156121235781548a8201890152908701908801612108565b5050858389010194505b50929a9950505050505050505050565b7f22000000000000000000000000000000000000000000000000000000000000008152600084516121758160018501602089016127a0565b7f200000000000000000000000000000000000000000000000000000000000000060019184019182015284516121b28160028401602089016127a0565b7f22200000000000000000000000000000000000000000000000000000000000006002929091019182015283516121f08160048401602088016127a0565b0160040195945050505050565b7f22000000000000000000000000000000000000000000000000000000000000008152600084516122358160018501602089016127a0565b7f200000000000000000000000000000000000000000000000000000000000000060019184019182015284516122728160028401602089016127a0565b7f22200000000000000000000000000000000000000000000000000000000000006002929091019182015283516122b08160048401602088016127a0565b7f202b3100000000000000000000000000000000000000000000000000000000006004929091019182015260070195945050505050565b7f7b226e616d65223a20224261672030780000000000000000000000000000000081526000835161231f8160108501602088016127a0565b80830190507f222c20226465736372697074696f6e223a20224c6f6f742069732072616e646f60108201527f6d697a656420616476656e747572657220676561722067656e6572617465642060308201527f616e642073746f726564206f6e20636861696e2e2053746174732c20696d616760508201527f65732c20616e64206f746865722066756e6374696f6e616c697479206172652060708201527f696e74656e74696f6e616c6c79206f6d697474656420666f72206f746865727360908201527f20746f20696e746572707265742e204665656c206672656520746f207573652060b08201527f4c6f6f7420696e20616e792077617920796f752077616e742e222c2022696d6160d08201527f6765223a2022646174613a696d6167652f7376672b786d6c3b6261736536342c60f0820152610110845161246981838501602089016127a0565b61249a82828501017f227d000000000000000000000000000000000000000000000000000000000000815260020190565b979650505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000008152600082516124dd81601d8501602087016127a0565b91909101601d0192915050565b60a08101818360005b60058110156125125781518352602092830192909101906001016124f3565b50505092915050565b602081526000825180602084015261253a8160408501602087016127a0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000821982111561257f5761257f612871565b500190565b600060ff821660ff84168060ff038211156125a1576125a1612871565b019392505050565b6000826125b8576125b86128a0565b500490565b600060ff8316806125d0576125d06128a0565b8060ff84160491505092915050565b6001817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff825b808611156126395782820483111561261f5761261f612871565b8086161561262c57928202925b94851c9491800291612605565b50509250929050565b6000611f18838360008261265857506001610399565b8161266557506000610399565b816001811461267b5760028114612685576126a1565b6001915050610399565b60ff84111561269657612696612871565b50506001821b610399565b5060208310610133831016604e8410600b84101617156126c4575081810a610399565b6126ce83836125df565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561270057612700612871565b029392505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561274057612740612871565b500290565b600060ff821660ff84168160ff048111821515161561270057612700612871565b60008282101561277857612778612871565b500390565b600060ff821660ff84168082101561279757612797612871565b90039392505050565b60005b838110156127bb5781810151838201526020016127a3565b838111156127ca576000848401525b50505050565b600181811c908216806127e457607f821691505b6020821081141561281e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561285657612856612871565b5060010190565b60008261286c5761286c6128a0565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfe3c2f746578743e3c7465787420783d2231302220793d2236302220636c6173733d2262617365223e3c2f746578743e3c7465787420783d2231302220793d223136302220636c6173733d2262617365223e3c2f746578743e3c7465787420783d2231302220793d223132302220636c6173733d2262617365223e3c2f746578743e3c7465787420783d2231302220793d2238302220636c6173733d2262617365223e3c2f746578743e3c7465787420783d2231302220793d223130302220636c6173733d2262617365223e3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f73766722207072657365727665417370656374526174696f3d22784d696e594d696e206d656574222076696577426f783d223020302033353020333530223e3c7374796c653e2e62617365207b2066696c6c3a2077686974653b20666f6e742d66616d696c793a2073657269663b20666f6e742d73697a653a20313470783b207d3c2f7374796c653e3c726563742077696474683d223130302522206865696768743d2231303025222066696c6c3d22626c61636b22202f3e3c7465787420783d2231302220793d2232302220636c6173733d2262617365223e3c2f746578743e3c7465787420783d2231302220793d223134302220636c6173733d2262617365223e4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f3c2f746578743e3c7465787420783d2231302220793d2234302220636c6173733d2262617365223ea2646970667358221220c158090cb3ef96218381e4cc4416d7880f329c28174f4f4cd3ff64faf2c7a38a64736f6c63430008070033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 23,
        "contract": "src/external/solc_0.8.4/SyntheticLoot.sol:SyntheticLoot",
        "label": "weapons",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 42,
        "contract": "src/external/solc_0.8.4/SyntheticLoot.sol:SyntheticLoot",
        "label": "chestArmor",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 61,
        "contract": "src/external/solc_0.8.4/SyntheticLoot.sol:SyntheticLoot",
        "label": "headArmor",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 80,
        "contract": "src/external/solc_0.8.4/SyntheticLoot.sol:SyntheticLoot",
        "label": "waistArmor",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 99,
        "contract": "src/external/solc_0.8.4/SyntheticLoot.sol:SyntheticLoot",
        "label": "footArmor",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 118,
        "contract": "src/external/solc_0.8.4/SyntheticLoot.sol:SyntheticLoot",
        "label": "handArmor",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 125,
        "contract": "src/external/solc_0.8.4/SyntheticLoot.sol:SyntheticLoot",
        "label": "necklaces",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 134,
        "contract": "src/external/solc_0.8.4/SyntheticLoot.sol:SyntheticLoot",
        "label": "rings",
        "offset": 0,
        "slot": "7",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 154,
        "contract": "src/external/solc_0.8.4/SyntheticLoot.sol:SyntheticLoot",
        "label": "suffixes",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 227,
        "contract": "src/external/solc_0.8.4/SyntheticLoot.sol:SyntheticLoot",
        "label": "namePrefixes",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 249,
        "contract": "src/external/solc_0.8.4/SyntheticLoot.sol:SyntheticLoot",
        "label": "nameSuffixes",
        "offset": 0,
        "slot": "10",
        "type": "t_array(t_string_storage)dyn_storage"
      }
    ],
    "types": {
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}